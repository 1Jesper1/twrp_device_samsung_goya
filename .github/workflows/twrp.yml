name: TWRP CI

on:
  workflow_dispatch:

  push:
    branches: [ android-4.4 ]
  pull_request:
    branches: [ android-4.4 ]

jobs:
  build:
    name: TWRP Build CI
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]

    env:
      OEM: samsung
      DEVICE: goya

    steps:
    - uses: actions/checkout@v2

    - name: Installing JDK 7 + Build Dependencies
      run: |
        mkdir ~/.jdk_7
        cd ~/.jdk_7
        wget https://repo.huaweicloud.com/java/jdk/7u80-b15/jdk-7u80-linux-i586.tar.gz
        tar -xzf jdk-7u80-linux-i586.tar.gz
        sudo apt-get install git-core gnupg flex bison build-essential zip curl zlib1g-dev \
          gcc-multilib g++-multilib libc6-dev-i386 libncurses5 lib32ncurses5-dev x11proto-core-dev \
          libx11-dev lib32z1-dev libgl1-mesa-dev libxml2-utils xsltproc unzip fontconfig schedtool

        sudo ln -f -s /usr/bin/python2.7 /usr/bin/python

    - name: Syncing TWRP sources
      run: |
        mkdir ~/TWRP
        cd ~/TWRP

        mkdir ~/.bin
        curl http://commondatastorage.googleapis.com/git-repo-downloads/repo > ~/.bin/repo
        python3 ~/.bin/repo init --depth=1 -u https://github.com/T11x-TWRP/platform_manifest_twrp_omni.git -b twrp-4.4
        python3 ~/.bin/repo sync -c --force-sync --optimized-fetch --no-tags --no-clone-bundle --prune -j$(nproc --all)

    - name: Building TWRP
      run: |
        export PATH="$HOME/.jdk_7/jdk1.7.0_80/bin:$PATH"
        export JAVA_HOME="$HOME/.jdk_7/jdk1.7.0_80"
        cd ~/TWRP
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        export LC_ALL=C
        lunch omni_${{env.DEVICE}}-eng
        mka recoveryimage

    - name: Uploading TWRP builds
      uses: actions/upload-artifact@v2
      with:
        name: twrp
        path: /home/runner/TWRP/out/target/product/${{env.DEVICE}}/recovery.*
